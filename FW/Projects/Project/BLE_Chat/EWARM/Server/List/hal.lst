###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      31/Oct/2014  21:00:34 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\FredZhou\Documents\Origin\Projects\platform\STM #
#                    32L1XX\hal.c                                             #
#    Command line =  C:\Users\FredZhou\Documents\Origin\Projects\platform\STM #
#                    32L1XX\hal.c -D USE_STDPERIPH_DRIVER -D STM32L1XX_MD -D  #
#                    SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D                   #
#                    ENABLE_USB_PRINTF -D DEBUG -D SERVER -D ACCEL_TEST -lcN  #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\List\ --diag_suppress Pa050 -o         #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\Obj\ --debug --endian=little           #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\inc\ -I "C:\Users\FredZhou\Documents\Origi #
#                    n\Projects\Project\BLE_Chat\EWARM\..\..\..\Bluetooth     #
#                    LE\SimpleBlueNRG_HCI\" -I "C:\Users\FredZhou\Documents\O #
#                    rigin\Projects\Project\BLE_Chat\EWARM\..\..\..\Bluetooth #
#                     LE\SimpleBlueNRG_HCI\includes\" -I                      #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\ -I               #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\ -I     #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\C #
#                    M3\DeviceSupport\ST\STM32L1xx\ -I                        #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_U #
#                    SB-FS-Device_Driver\inc\ -I                              #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1 #
#                    xx_StdPeriph_Driver\inc\ -I                              #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc #
#                    \ -I C:\Users\FredZhou\Documents\Origin\Projects\Project #
#                    \BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\LI #
#                    S3DH\inc\ -I C:\Users\FredZhou\Documents\Origin\Projects #
#                    \Project\BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libr #
#                    aries\STLM75\inc\ -I C:\Users\FredZhou\Documents\Origin\ #
#                    Projects\Project\BLE_Chat\EWARM\..\..\..\platform\STM32L #
#                    1XX\Libraries\HTS221\inc\ -I                             #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\ #
#                    inc\ -I C:\Users\FredZhou\Documents\Origin\Projects\Proj #
#                    ect\BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries #
#                    \SDK_Eval_STM32L\inc\ -Ohs --use_c++_inline -I           #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.5\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\List\hal.lst                           #
#    Object file  =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\Obj\hal.o                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\FredZhou\Documents\Origin\Projects\platform\STM32L1XX\hal.c
      1          /******************** (C) COPYRIGHT 2012 STMicroelectronics ********************
      2          * File Name          : hal.c
      3          * Author             : AMS - HEA&RF BU
      4          * Version            : V1.0.0
      5          * Date               : 04-Oct-2013
      6          * Description        : Implementation of some APIs to access BlueNRG interface.
      7          ********************************************************************************
      8          * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
      9          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     10          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     11          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     12          * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     13          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     14          *******************************************************************************/
     15          
     16          /******************************************************************************
     17           * Includes
     18           *****************************************************************************/
     19          #include <hal.h> 
     20          #include "platform_config.h"
     21          #include "stm32l1xx_rcc.h"
     22          #include "stm32l1xx_tim.h"
     23          #include "hw_config.h"
     24          #include "low_power.h"
     25          #include "misc.h"
     26          #include <hci.h>
     27          #include "gp_timer.h"
     28          
     29          #include "SDK_EVAL_Spi_Driver.h"
     30          
     31          /******************************************************************************
     32           * Macros
     33           *****************************************************************************/
     34          
     35          /******************************************************************************
     36           * Constants
     37           *****************************************************************************/
     38          
     39          /******************************************************************************
     40           * Types
     41           *****************************************************************************/
     42          
     43          /******************************************************************************
     44           * Local Function Prototypes
     45           *****************************************************************************/
     46          
     47          /******************************************************************************
     48           * Global Functions
     49           *****************************************************************************/
     50               
     51          #define SPI_BUFFER_SIZE 256
     52          volatile unsigned int spi_ptr_in = 0, spi_buff_len = 0;
     53          unsigned spi_ptr_out = 0;
     54          uint8_t spi_buffer[SPI_BUFFER_SIZE];
     55          
     56          /*
     57          * Returns 1 if the byte is successfully inserted in the buffer, 0 otherwise.
     58          */
     59          int spi_input(uint8_t byte)
     60          {
     61              if(spi_buff_len == SPI_BUFFER_SIZE)
     62                  return 0;
     63              
     64              spi_buffer[spi_ptr_in] = byte;
     65              spi_ptr_in++;
     66              spi_buff_len++;
     67              if(spi_ptr_in == SPI_BUFFER_SIZE){
     68                  spi_ptr_in = 0;
     69              }
     70              
     71              return 1;
     72          }
     73          
     74          int spi_fifor(void)
     75          {
     76              return spi_buff_len;
     77          }
     78          
     79          void spi_read_ms(int count, char *data)
     80          {
     81              int i;
     82              
     83              for(i = 0; spi_ptr_out != spi_ptr_in && i < count; i++){
     84                  
     85                  data[i] = spi_buffer[spi_ptr_out++];
     86                  if(spi_ptr_out == SPI_BUFFER_SIZE)
     87                      spi_ptr_out = 0;
     88                  
     89              }
     90              spi_buff_len -= i;
     91          }
     92          
     93          void Hal_Write_Serial(const void* data1, const void* data2, tHalInt32 n_bytes1, tHalInt32 n_bytes2)
     94          {
     95              struct timer t;
     96                      
     97          	Timer_Set(&t, CLOCK_SECOND/10);
     98              
     99              while(1){
    100                if(BlueNRG_SPI_Write((uint8_t *)data1,(uint8_t *)data2, n_bytes1, n_bytes2)==0) break;
    101                if(Timer_Expired(&t)){
    102                    break;
    103                }
    104              }
    105          }
    106          
    107          
    108          
    109          /****************************************************************************/
    110          
    111          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   Hal_Write_Serial
        32   -> BlueNRG_SPI_Write
        32   -> Timer_Expired
        32   -> Timer_Set
       0   spi_fifor
       0   spi_input
       8   spi_read_ms


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
      56  Hal_Write_Serial
       6  spi_fifor
      48  spi_input
     268  spi_ptr_in
          spi_buff_len
          spi_ptr_out
          spi_buffer
      52  spi_read_ms

 
 268 bytes in section .bss
 170 bytes in section .text
 
 170 bytes of CODE memory
 268 bytes of DATA memory

Errors: none
Warnings: none
