###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      31/Oct/2014  21:00:51 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\src\usb_desc.c                                      #
#    Command line =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\src\usb_desc.c -D USE_STDPERIPH_DRIVER -D           #
#                    STM32L1XX_MD -D SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D   #
#                    ENABLE_USB_PRINTF -D DEBUG -D SERVER -D ACCEL_TEST -lcN  #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\List\ --diag_suppress Pa050 -o         #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\Obj\ --debug --endian=little           #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\inc\ -I "C:\Users\FredZhou\Documents\Origi #
#                    n\Projects\Project\BLE_Chat\EWARM\..\..\..\Bluetooth     #
#                    LE\SimpleBlueNRG_HCI\" -I "C:\Users\FredZhou\Documents\O #
#                    rigin\Projects\Project\BLE_Chat\EWARM\..\..\..\Bluetooth #
#                     LE\SimpleBlueNRG_HCI\includes\" -I                      #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\ -I               #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\ -I     #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\C #
#                    M3\DeviceSupport\ST\STM32L1xx\ -I                        #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_U #
#                    SB-FS-Device_Driver\inc\ -I                              #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1 #
#                    xx_StdPeriph_Driver\inc\ -I                              #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc #
#                    \ -I C:\Users\FredZhou\Documents\Origin\Projects\Project #
#                    \BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\LI #
#                    S3DH\inc\ -I C:\Users\FredZhou\Documents\Origin\Projects #
#                    \Project\BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libr #
#                    aries\STLM75\inc\ -I C:\Users\FredZhou\Documents\Origin\ #
#                    Projects\Project\BLE_Chat\EWARM\..\..\..\platform\STM32L #
#                    1XX\Libraries\HTS221\inc\ -I                             #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\ #
#                    inc\ -I C:\Users\FredZhou\Documents\Origin\Projects\Proj #
#                    ect\BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries #
#                    \SDK_Eval_STM32L\inc\ -Ohs --use_c++_inline -I           #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.5\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\List\usb_desc.lst                      #
#    Object file  =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\Obj\usb_desc.o                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_Chat\src\usb_desc.c
      1          /******************** (C) COPYRIGHT 2011 STMicroelectronics ********************
      2          * File Name          : usb_desc.c
      3          * Author             : MCD Application Team
      4          * Version            : V3.3.0
      5          * Date               : 21-March-2011
      6          * Description        : Descriptors for Virtual Com Port Demo
      7          ********************************************************************************
      8          * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
      9          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     10          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     11          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     12          * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     13          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     14          *******************************************************************************/
     15          
     16          /* Includes ------------------------------------------------------------------*/
     17          #include "usb_lib.h"
     18          #include "usb_desc.h"
     19          
     20          /* USB Standard Device Descriptor */
     21          const uint8_t Virtual_Com_Port_DeviceDescriptor[] =
     22            {
     23              0x12,   /* bLength */
     24              USB_DEVICE_DESCRIPTOR_TYPE,     /* bDescriptorType */
     25              0x00,
     26              0x02,   /* bcdUSB = 2.00 */
     27              0x02,   /* bDeviceClass: CDC */
     28              0x00,   /* bDeviceSubClass */
     29              0x00,   /* bDeviceProtocol */
     30              0x40,   /* bMaxPacketSize0 */
     31              0x83,
     32              0x04,   /* idVendor = 0x0483 */
     33              0x40,
     34              0x57,   /* idProduct = 0x7540 */
     35              0x00,
     36              0x02,   /* bcdDevice = 2.00 */
     37              1,              /* Index of string descriptor describing manufacturer */
     38              2,              /* Index of string descriptor describing product */
     39              3,              /* Index of string descriptor describing the device's serial number */
     40              0x01    /* bNumConfigurations */
     41            };
     42          
     43          const uint8_t Virtual_Com_Port_ConfigDescriptor[] =
     44            {
     45              /*Configuration Descriptor*/
     46              0x09,   /* bLength: Configuration Descriptor size */
     47              USB_CONFIGURATION_DESCRIPTOR_TYPE,      /* bDescriptorType: Configuration */
     48              VIRTUAL_COM_PORT_SIZ_CONFIG_DESC,       /* wTotalLength:no of returned bytes */
     49              0x00,
     50              0x02,   /* bNumInterfaces: 2 interface */
     51              0x01,   /* bConfigurationValue: Configuration value */
     52              0x00,   /* iConfiguration: Index of string descriptor describing the configuration */
     53              0xC0,   /* bmAttributes: self powered */
     54              0x32,   /* MaxPower 0 mA */
     55              /*Interface Descriptor*/
     56              0x09,   /* bLength: Interface Descriptor size */
     57              USB_INTERFACE_DESCRIPTOR_TYPE,  /* bDescriptorType: Interface */
     58              /* Interface descriptor type */
     59              0x00,   /* bInterfaceNumber: Number of Interface */
     60              0x00,   /* bAlternateSetting: Alternate setting */
     61              0x01,   /* bNumEndpoints: One endpoints used */
     62              0x02,   /* bInterfaceClass: Communication Interface Class */
     63              0x02,   /* bInterfaceSubClass: Abstract Control Model */
     64              0x01,   /* bInterfaceProtocol: Common AT commands */
     65              0x00,   /* iInterface: */
     66              /*Header Functional Descriptor*/
     67              0x05,   /* bLength: Endpoint Descriptor size */
     68              0x24,   /* bDescriptorType: CS_INTERFACE */
     69              0x00,   /* bDescriptorSubtype: Header Func Desc */
     70              0x10,   /* bcdCDC: spec release number */
     71              0x01,
     72              /*Call Management Functional Descriptor*/
     73              0x05,   /* bFunctionLength */
     74              0x24,   /* bDescriptorType: CS_INTERFACE */
     75              0x01,   /* bDescriptorSubtype: Call Management Func Desc */
     76              0x00,   /* bmCapabilities: D0+D1 */
     77              0x01,   /* bDataInterface: 1 */
     78              /*ACM Functional Descriptor*/
     79              0x04,   /* bFunctionLength */
     80              0x24,   /* bDescriptorType: CS_INTERFACE */
     81              0x02,   /* bDescriptorSubtype: Abstract Control Management desc */
     82              0x02,   /* bmCapabilities */
     83              /*Union Functional Descriptor*/
     84              0x05,   /* bFunctionLength */
     85              0x24,   /* bDescriptorType: CS_INTERFACE */
     86              0x06,   /* bDescriptorSubtype: Union func desc */
     87              0x00,   /* bMasterInterface: Communication class interface */
     88              0x01,   /* bSlaveInterface0: Data Class Interface */
     89              /*Endpoint 2 Descriptor*/
     90              0x07,   /* bLength: Endpoint Descriptor size */
     91              USB_ENDPOINT_DESCRIPTOR_TYPE,   /* bDescriptorType: Endpoint */
     92              0x82,   /* bEndpointAddress: (IN2) */
     93              0x03,   /* bmAttributes: Interrupt */
     94              VIRTUAL_COM_PORT_INT_SIZE,      /* wMaxPacketSize: */
     95              0x00,
     96              0xFF,   /* bInterval: */
     97              /*Data class interface descriptor*/
     98              0x09,   /* bLength: Endpoint Descriptor size */
     99              USB_INTERFACE_DESCRIPTOR_TYPE,  /* bDescriptorType: */
    100              0x01,   /* bInterfaceNumber: Number of Interface */
    101              0x00,   /* bAlternateSetting: Alternate setting */
    102              0x02,   /* bNumEndpoints: Two endpoints used */
    103              0x0A,   /* bInterfaceClass: CDC */
    104              0x00,   /* bInterfaceSubClass: */
    105              0x00,   /* bInterfaceProtocol: */
    106              0x00,   /* iInterface: */
    107              /*Endpoint 3 Descriptor*/
    108              0x07,   /* bLength: Endpoint Descriptor size */
    109              USB_ENDPOINT_DESCRIPTOR_TYPE,   /* bDescriptorType: Endpoint */
    110              0x03,   /* bEndpointAddress: (OUT3) */
    111              0x02,   /* bmAttributes: Bulk */
    112              VIRTUAL_COM_PORT_DATA_SIZE,             /* wMaxPacketSize: */
    113              0x00,
    114              0x00,   /* bInterval: ignore for Bulk transfer */
    115              /*Endpoint 1 Descriptor*/
    116              0x07,   /* bLength: Endpoint Descriptor size */
    117              USB_ENDPOINT_DESCRIPTOR_TYPE,   /* bDescriptorType: Endpoint */
    118              0x81,   /* bEndpointAddress: (IN1) */
    119              0x02,   /* bmAttributes: Bulk */
    120              VIRTUAL_COM_PORT_DATA_SIZE,             /* wMaxPacketSize: */
    121              0x00,
    122              0x00    /* bInterval */
    123            };
    124          
    125          /* USB String Descriptors */
    126          const uint8_t Virtual_Com_Port_StringLangID[VIRTUAL_COM_PORT_SIZ_STRING_LANGID] =
    127            {
    128              VIRTUAL_COM_PORT_SIZ_STRING_LANGID,
    129              USB_STRING_DESCRIPTOR_TYPE,
    130              0x09,
    131              0x04 /* LangID = 0x0409: U.S. English */
    132            };
    133          
    134          const uint8_t Virtual_Com_Port_StringVendor[VIRTUAL_COM_PORT_SIZ_STRING_VENDOR] =
    135            {
    136              VIRTUAL_COM_PORT_SIZ_STRING_VENDOR,     /* Size of Vendor string */
    137              USB_STRING_DESCRIPTOR_TYPE,             /* bDescriptorType*/
    138              /* Manufacturer: "STMicroelectronics" */
    139              'S', 0, 'T', 0, 'M', 0, 'i', 0, 'c', 0, 'r', 0, 'o', 0, 'e', 0,
    140              'l', 0, 'e', 0, 'c', 0, 't', 0, 'r', 0, 'o', 0, 'n', 0, 'i', 0,
    141              'c', 0, 's', 0
    142            };
    143          
    144          const uint8_t Virtual_Com_Port_StringProduct[VIRTUAL_COM_PORT_SIZ_STRING_PRODUCT] =
    145            {
    146              VIRTUAL_COM_PORT_SIZ_STRING_PRODUCT,          /* bLength */
    147              USB_STRING_DESCRIPTOR_TYPE,        /* bDescriptorType */
    148              /* Product name: "STM32 Virtual COM Port" */
    149              'S', 0, 'T', 0, 'M', 0, '3', 0, '2', 0, ' ', 0, 'V', 0, 'i', 0,
    150              'r', 0, 't', 0, 'u', 0, 'a', 0, 'l', 0, ' ', 0, 'C', 0, 'O', 0,
    151              'M', 0, ' ', 0, 'P', 0, 'o', 0, 'r', 0, 't', 0, ' ', 0, ' ', 0
    152            };
    153          
    154          uint8_t Virtual_Com_Port_StringSerial[VIRTUAL_COM_PORT_SIZ_STRING_SERIAL] =
    155            {
    156              VIRTUAL_COM_PORT_SIZ_STRING_SERIAL,           /* bLength */
    157              USB_STRING_DESCRIPTOR_TYPE,                   /* bDescriptorType */
    158              'S', 0, 'T', 0, 'M', 0, '3', 0, '2', 0, '1', 0, '0', 0
    159            };
    160          
    161          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      68  Virtual_Com_Port_ConfigDescriptor
      20  Virtual_Com_Port_DeviceDescriptor
       4  Virtual_Com_Port_StringLangID
      52  Virtual_Com_Port_StringProduct
      28  Virtual_Com_Port_StringSerial
      40  Virtual_Com_Port_StringVendor

 
  28 bytes in section .data
 184 bytes in section .rodata
 
 184 bytes of CONST memory
  28 bytes of DATA  memory

Errors: none
Warnings: none
