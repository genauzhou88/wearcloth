###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      31/Oct/2014  21:00:52 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\src\usb_endp.c                                      #
#    Command line =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\src\usb_endp.c -D USE_STDPERIPH_DRIVER -D           #
#                    STM32L1XX_MD -D SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D   #
#                    ENABLE_USB_PRINTF -D DEBUG -D SERVER -D ACCEL_TEST -lcN  #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\List\ --diag_suppress Pa050 -o         #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\Obj\ --debug --endian=little           #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\inc\ -I "C:\Users\FredZhou\Documents\Origi #
#                    n\Projects\Project\BLE_Chat\EWARM\..\..\..\Bluetooth     #
#                    LE\SimpleBlueNRG_HCI\" -I "C:\Users\FredZhou\Documents\O #
#                    rigin\Projects\Project\BLE_Chat\EWARM\..\..\..\Bluetooth #
#                     LE\SimpleBlueNRG_HCI\includes\" -I                      #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\ -I               #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\ -I     #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\C #
#                    M3\DeviceSupport\ST\STM32L1xx\ -I                        #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_U #
#                    SB-FS-Device_Driver\inc\ -I                              #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1 #
#                    xx_StdPeriph_Driver\inc\ -I                              #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc #
#                    \ -I C:\Users\FredZhou\Documents\Origin\Projects\Project #
#                    \BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\LI #
#                    S3DH\inc\ -I C:\Users\FredZhou\Documents\Origin\Projects #
#                    \Project\BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libr #
#                    aries\STLM75\inc\ -I C:\Users\FredZhou\Documents\Origin\ #
#                    Projects\Project\BLE_Chat\EWARM\..\..\..\platform\STM32L #
#                    1XX\Libraries\HTS221\inc\ -I                             #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\ #
#                    inc\ -I C:\Users\FredZhou\Documents\Origin\Projects\Proj #
#                    ect\BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries #
#                    \SDK_Eval_STM32L\inc\ -Ohs --use_c++_inline -I           #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.5\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\List\usb_endp.lst                      #
#    Object file  =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\Obj\usb_endp.o                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_Chat\src\usb_endp.c
      1          /******************** (C) COPYRIGHT 2011 STMicroelectronics ********************
      2          * File Name          : usb_endp.c
      3          * Author             : MCD Application Team
      4          * Version            : V3.3.0
      5          * Date               : 21-March-2011
      6          * Description        : Endpoint routines
      7          ********************************************************************************
      8          * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
      9          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     10          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     11          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     12          * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     13          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     14          *******************************************************************************/
     15          
     16          /* Includes ------------------------------------------------------------------*/
     17          #include "usb_lib.h"
     18          #include "usb_desc.h"
     19          #include "usb_mem.h"
     20          #include "hw_config.h"
     21          #include "usb_istr.h"
     22          #include "usb_pwr.h"
     23          #include "usb_prop.h"
     24          #if ACI_LAYER
     25          #include "htl.h"
     26          #endif
     27          
     28          #include "SDK_EVAL_Config.h"
     29          /* Extern variables ----------------------------------------------------------*/
     30          extern LINE_CODING linecoding;
     31          
     32          /* Private typedef -----------------------------------------------------------*/
     33          /* Private define ------------------------------------------------------------*/
     34          
     35          /* Interval between sending IN packets in frame number (1 frame = 1ms) */
     36          #define VCOMPORT_IN_FRAME_INTERVAL             1
     37          
     38          /* Private macro -------------------------------------------------------------*/
     39          /* Private variables ---------------------------------------------------------*/
     40          uint8_t USB_Rx_Buffer[VIRTUAL_COM_PORT_DATA_SIZE];
     41          extern  uint8_t USART_Rx_Buffer[];
     42          extern uint32_t USART_Rx_ptr_out;
     43          extern uint32_t USART_Rx_length;
     44          extern uint8_t  USB_Tx_State;
     45          
     46          /* Private function prototypes -----------------------------------------------*/
     47          /* Private functions ---------------------------------------------------------*/
     48          
     49          /*******************************************************************************
     50          * Function Name  : EP1_IN_Callback
     51          * Description    :
     52          * Input          : None.
     53          * Output         : None.
     54          * Return         : None.
     55          *******************************************************************************/
     56          void EP1_IN_Callback (void)
     57          {
     58            uint16_t USB_Tx_ptr;
     59            uint16_t USB_Tx_length;
     60            
     61            if (USB_Tx_State == 1)
     62            {
     63              if (USART_Rx_length == 0) 
     64              {
     65                USB_Tx_State = 0;
     66                USB_Tx_length = 0;
     67              }
     68              else 
     69              {
     70                if (USART_Rx_length > VIRTUAL_COM_PORT_DATA_SIZE){
     71                  USB_Tx_ptr = USART_Rx_ptr_out;
     72                  USB_Tx_length = VIRTUAL_COM_PORT_DATA_SIZE;
     73                  
     74                  USART_Rx_ptr_out += VIRTUAL_COM_PORT_DATA_SIZE;
     75                  USART_Rx_length -= VIRTUAL_COM_PORT_DATA_SIZE;    
     76                }
     77                else 
     78                {
     79                  USB_Tx_ptr = USART_Rx_ptr_out;
     80                  USB_Tx_length = USART_Rx_length;
     81                  
     82                  USART_Rx_ptr_out += USART_Rx_length;
     83                  USART_Rx_length = 0;
     84                }
     85                
     86          #ifdef USE_STM3210C_EVAL
     87                USB_SIL_Write(EP1_IN, &USART_Rx_Buffer[USB_Tx_ptr], USB_Tx_length);  
     88          #else
     89                UserToPMABufferCopy(&USART_Rx_Buffer[USB_Tx_ptr], ENDP1_TXADDR, USB_Tx_length);
     90          #endif      
     91              }
     92              SetEPTxCount(ENDP1, USB_Tx_length);
     93              SetEPTxValid(ENDP1);
     94            }
     95          }
     96          
     97          /*******************************************************************************
     98          * Function Name  : EP3_OUT_Callback
     99          * Description    :
    100          * Input          : None.
    101          * Output         : None.
    102          * Return         : None.
    103          *******************************************************************************/
    104          //void processInputData(uint8_t* data_buffer, uint8_t Nb_bytes);
    105          void EP3_OUT_Callback(void)
    106          {
    107            uint16_t USB_Rx_Cnt;
    108            
    109            /* Get the received data buffer and update the counter */
    110            USB_Rx_Cnt = USB_SIL_Read(EP3_OUT, USB_Rx_Buffer);
    111            
    112            /* USB data will be immediately processed, this allow next USB traffic being 
    113            NAKed till the end of the USART Xfer */
    114            
    115            SdkEval_IO_Receive_Data(USB_Rx_Buffer, USB_Rx_Cnt);
    116            
    117          #ifndef STM32F10X_CL
    118            /* Enable the receive of data on EP3 */
    119            SetEPRxValid(ENDP3);
    120          #endif /* STM32F10X_CL */
    121          }
    122          
    123          
    124          /*******************************************************************************
    125          * Function Name  : SOF_Callback / INTR_SOFINTR_Callback
    126          * Description    :
    127          * Input          : None.
    128          * Output         : None.
    129          * Return         : None.
    130          *******************************************************************************/
    131          #ifdef STM32F10X_CL
    132          void INTR_SOFINTR_Callback(void)
    133          #else
    134          void SOF_Callback(void)
    135          #endif /* STM32F10X_CL */
    136          {
    137            static uint32_t FrameCount = 0;
    138            
    139            if(bDeviceState == CONFIGURED)
    140            {
    141              if (FrameCount++ == VCOMPORT_IN_FRAME_INTERVAL)
    142              {
    143                /* Reset the frame counter */
    144                FrameCount = 0;
    145                
    146                /* Check the data to be sent through IN pipe */
    147                Handle_USBAsynchXfer();
    148              }
    149            }  
    150          }
    151          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/
    152          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   EP1_IN_Callback
        16   -> SetEPTxCount
         0   -> SetEPTxValid
        16   -> UserToPMABufferCopy
       8   EP3_OUT_Callback
         8   -> SdkEval_IO_Receive_Data
         0   -> SetEPRxValid
         8   -> USB_SIL_Read
       0   SOF_Callback
         0   -> Handle_USBAsynchXfer


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
      92  EP1_IN_Callback
      30  EP3_OUT_Callback
       4  FrameCount
      30  SOF_Callback
      64  USB_Rx_Buffer

 
  68 bytes in section .bss
 180 bytes in section .text
 
 180 bytes of CODE memory
  68 bytes of DATA memory

Errors: none
Warnings: none
