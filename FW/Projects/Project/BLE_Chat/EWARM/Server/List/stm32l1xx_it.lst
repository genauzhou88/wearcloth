###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      31/Oct/2014  21:00:45 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\src\stm32l1xx_it.c                                  #
#    Command line =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\src\stm32l1xx_it.c -D USE_STDPERIPH_DRIVER -D       #
#                    STM32L1XX_MD -D SYSCLK_FREQ_HSI_32MHz -D ENABLE_USB -D   #
#                    ENABLE_USB_PRINTF -D DEBUG -D SERVER -D ACCEL_TEST -lcN  #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\List\ --diag_suppress Pa050 -o         #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\Obj\ --debug --endian=little           #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench               #
#                    6.5\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\inc\ -I "C:\Users\FredZhou\Documents\Origi #
#                    n\Projects\Project\BLE_Chat\EWARM\..\..\..\Bluetooth     #
#                    LE\SimpleBlueNRG_HCI\" -I "C:\Users\FredZhou\Documents\O #
#                    rigin\Projects\Project\BLE_Chat\EWARM\..\..\..\Bluetooth #
#                     LE\SimpleBlueNRG_HCI\includes\" -I                      #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\ -I               #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\ -I     #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\CMSIS\C #
#                    M3\DeviceSupport\ST\STM32L1xx\ -I                        #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32_U #
#                    SB-FS-Device_Driver\inc\ -I                              #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\STM32L1 #
#                    xx_StdPeriph_Driver\inc\ -I                              #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\I2C\inc #
#                    \ -I C:\Users\FredZhou\Documents\Origin\Projects\Project #
#                    \BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\LI #
#                    S3DH\inc\ -I C:\Users\FredZhou\Documents\Origin\Projects #
#                    \Project\BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libr #
#                    aries\STLM75\inc\ -I C:\Users\FredZhou\Documents\Origin\ #
#                    Projects\Project\BLE_Chat\EWARM\..\..\..\platform\STM32L #
#                    1XX\Libraries\HTS221\inc\ -I                             #
#                    C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries\LPS25H\ #
#                    inc\ -I C:\Users\FredZhou\Documents\Origin\Projects\Proj #
#                    ect\BLE_Chat\EWARM\..\..\..\platform\STM32L1XX\Libraries #
#                    \SDK_Eval_STM32L\inc\ -Ohs --use_c++_inline -I           #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.5\arm\CMSIS\Include\"                                  #
#    List file    =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\List\stm32l1xx_it.lst                  #
#    Object file  =  C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_ #
#                    Chat\EWARM\Server\Obj\stm32l1xx_it.o                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\FredZhou\Documents\Origin\Projects\Project\BLE_Chat\src\stm32l1xx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32l1xx_it.c 
      4            * @author  MCD Application Team
      5            * @version V3.3.0
      6            * @date    21-March-2011
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and 
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @copy
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            */ 
     22          
     23          /* Includes ------------------------------------------------------------------*/
     24          #include "stm32l1xx_it.h"
     25          #include "usb_lib.h"
     26          #include "usb_istr.h"
     27          #include "hw_config.h"
     28          #include "platform_config.h"
     29          #include "hci.h"
     30          #include "hal_lis3dh.h"
     31          #include "lis3dh_driver.h"
     32          #include "gatt_db.h"
     33          
     34          #include "SDK_EVAL_Config.h"
     35          
     36          
     37          /* Private typedef -----------------------------------------------------------*/
     38          /* Private define ------------------------------------------------------------*/
     39          /* Private macro -------------------------------------------------------------*/
     40          /* Private variables ---------------------------------------------------------*/
     41          /* Private function prototypes -----------------------------------------------*/
     42          /* Private functions ---------------------------------------------------------*/
     43          
     44          /******************************************************************************/
     45          /*            Cortex-M3 Processor Exceptions Handlers                         */
     46          /******************************************************************************/
     47          
     48          /**
     49            * @brief  This function handles NMI exception.
     50            * @param  None
     51            * @retval : None
     52            */
     53          void NMI_Handler(void)
     54          {
     55          }
     56          
     57          /**
     58            * @brief  This function handles Hard Fault exception.
     59            * @param  None
     60            * @retval : None
     61            */
     62          void HardFault_Handler(void)
     63          {
     64              while(1);
     65          }
     66          
     67          /**
     68            * @brief  This function handles Memory Manage exception.
     69            * @param  None
     70            * @retval : None
     71            */
     72          void MemManage_Handler(void)
     73          {
     74              while(1);
     75          }
     76          
     77          /**
     78            * @brief  This function handles Bus Fault exception.
     79            * @param  None
     80            * @retval : None
     81            */
     82          void BusFault_Handler(void)
     83          {
     84              while(1);
     85          }
     86          
     87          /**
     88            * @brief  This function handles Usage Fault exception.
     89            * @param  None
     90            * @retval : None
     91            */
     92          void UsageFault_Handler(void)
     93          {
     94              while(1);
     95          }
     96          
     97          /**
     98            * @brief  This function handles SVCall exception.
     99            * @param  None
    100            * @retval : None
    101            */
    102          void SVC_Handler(void)
    103          {
    104          }
    105          
    106          /**
    107            * @brief  This function handles Debug Monitor exception.
    108            * @param  None
    109            * @retval : None
    110            */
    111          void DebugMon_Handler(void)
    112          {
    113          }
    114          
    115          /**
    116            * @brief  This function handles PendSVC exception.
    117            * @param  None
    118            * @retval : None
    119            */
    120          void PendSV_Handler(void)
    121          {
    122          }
    123          
    124          /**
    125            * @brief  This function handles SysTick Handler.
    126            * @param  None
    127            * @retval : None
    128            */
    129          //void SysTick_Handler(void)
    130          //{
    131          //}
    132          
    133          /*******************************************************************************
    134          * Function Name  : USB_LP_IRQHandler
    135          * Description    : This function handles USB Low Priority interrupts  requests.
    136          * Input          : None
    137          * Output         : None
    138          * Return         : None
    139          *******************************************************************************/
    140          #ifdef ENABLE_USB
    141          void USB_LP_IRQHandler(void)
    142          {
    143            USB_Istr();
    144          }
    145          #endif
    146          
    147          /*******************************************************************************
    148          * Function Name  : SPI_IRQ_IRQHandler
    149          * Description    : This function handles SPIx global interrupt request.
    150          * Input          : None
    151          * Output         : None
    152          * Return         : None
    153          *******************************************************************************/
    154          void SPI_IRQ_IRQHandler()
    155          {  
    156            HCI_Isr();
    157          }
    158          
    159          /******************************************************************************/
    160          /*                 STM32L15x Peripherals Interrupt Handlers                   */
    161          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    162          /*  available peripheral interrupt handler's name please refer to the startup */
    163          /*  file (startup_stm32l1xx_lp.s).                                            */
    164          /******************************************************************************/
    165          
    166          /**
    167            * @brief  This function handles PPP interrupt request.
    168            * @param  None
    169            * @retval : None
    170            */
    171          /*void PPP_IRQHandler(void)
    172          {
    173          }*/
    174          
    175          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/
    176          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DebugMon_Handler
       0   EXTI15_10_IRQHandler
         0   -> HCI_Isr
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   USB_LP_IRQHandler
         0   -> USB_Istr
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  BusFault_Handler
       2  DebugMon_Handler
       4  EXTI15_10_IRQHandler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
       2  SVC_Handler
       4  USB_LP_IRQHandler
       2  UsageFault_Handler

 
 24 bytes in section .text
 
 24 bytes of CODE memory

Errors: none
Warnings: none
